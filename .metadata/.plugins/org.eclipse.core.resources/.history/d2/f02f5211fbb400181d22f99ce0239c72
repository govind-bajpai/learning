package com.gyanda.oAuth2.serviceController;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.gyanda.oAuth2.models.User;
import com.gyanda.oAuth2.services.UserService;

@Controller
@RequestMapping("/user")
public class UserController {

	private UserService userService;
	
	@Autowired(required=true)
	@Qualifier(value="userService")
	public void setUserService(UserService userService) {
		this.userService = userService;
	}
	
    @RequestMapping(value = "/list", method = RequestMethod.GET)
    @ResponseBody
	public List<User> listUsers() {
    	return this.userService.listUsers();
	}
    
    @RequestMapping(value="/signUp", method= RequestMethod.POST, consumes = "application/json",produces =  "application/json")
    @ResponseBody
    public UserResponse addUsers(@RequestBody User user){
    	return this.userService.addUser(user);
    }
    
    @RequestMapping(value="/login", method= RequestMethod.POST, consumes = "application/json",produces =  "application/json")
    @ResponseBody
    public List<User> login(@RequestBody User user){
    	this.userService.addUser(user);
    	return this.userService.listUsers();
    }
    
    @RequestMapping(value="/uploadImage2",method = RequestMethod.POST)
    public @ResponseBody String uploadImage2(@RequestParam("imageValue") String imageValue,HttpServletRequest request)
    {
        try
        {
            //This will decode the String which is encoded by using Base64 class
            byte[] imageByte=Base64.decodeBase64(imageValue);

            String directory=servletContext.getRealPath("/")+"images/sample.jpg";

            new FileOutputStream(directory).write(imageByte);
            return "success ";
        }
        catch(Exception e)
        {
            return "error = "+e;
        }

    }
    
	
}